// Prefetch necessary data
var predefined_ = {
    "assert":"reference/simple_stmts.html#the-assert-statement",
    "pass":"reference/simple_stmts.html#the-pass-statement",
    "del":"reference/simple_stmts.html#the-del-statement",
    "return":"reference/simple_stmts.html#the-return-statement",
    "yield":"reference/simple_stmts.html#the-yield-statement",
    "raise":"reference/simple_stmts.html#the-raise-statement",
    "break":"reference/simple_stmts.html#the-break-statement",
    "continue":"reference/simple_stmts.html#the-continue-statement",
    "import":"reference/simple_stmts.html#the-import-statement",
    "future":"reference/simple_stmts.html#future-statements",
    "__future__":"reference/simple_stmts.html#future-statements",
    "global":"reference/simple_stmts.html#the-global-statement",
    "exec":"reference/simple_stmts.html#the-exec-statement",
    "if":"reference/compound_stmts.html#the-if-statement",
    "while":"reference/compound_stmts.html#the-while-statement",
    "for":"reference/compound_stmts.html#the-for-statement",
    "try":"reference/compound_stmts.html#the-try-statement",
    "except":"reference/compound_stmts.html#the-try-statement",
    "with":"reference/compound_stmts.html#the-with-statement",
    "def":"reference/compound_stmts.html#function-definitions",
    "class":"tutorial/classes.html#a-first-look-at-classes",
    "classes":"tutorial/classes.html#a-first-look-at-classes",
    "inheritance":"tutorial/classes.html#inheritance",
    "private":"tutorial/classes.html#private-variables",
    "encapsulation":"tutorial/classes.html#private-variables",
    "private variables":"tutorial/classes.html#private-variables",
    "double underscore":"tutorial/classes.html#private-variables",
    "and":"library/stdtypes.html#boolean-operations-and-or-not",
    "or":"library/stdtypes.html#boolean-operations-and-or-not",
    "not":"library/stdtypes.html#boolean-operations-and-or-not",
    "<":"library/stdtypes.html#comparisons",
    "<=":"library/stdtypes.html#comparisons",
    ">":"library/stdtypes.html#comparisons",
    ">=":"library/stdtypes.html#comparisons",
    "==":"library/stdtypes.html#comparisons",
    "!=":"library/stdtypes.html#comparisons",
    "is":"library/stdtypes.html#comparisons",
    "is not":"library/stdtypes.html#comparisons",
    "int":"library/stdtypes.html#numeric-types-int-float-complex",
    "float":"library/stdtypes.html#numeric-types-int-float-complex",
    "complex":"library/stdtypes.html#numeric-types-int-float-complex",
    "iterator":"library/stdtypes.html#iterator-types",
    "str":"library/stdtypes.html#string-methods",
    "object":"reference/datamodel.html#objects-values-and-types",
    "__slots__":"reference/datamodel.html#slots",
    "__metaclass__":"reference/datamodel.html#customizing-class-creation",
    "metaclass":"reference/datamodel.html#customizing-class-creation",
    "metaclasses":"reference/datamodel.html#customizing-class-creation", 
    "list.":"https://docs.python.org/3.6/library/stdtypes.html#common-sequence-operations"
};